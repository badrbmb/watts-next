[tool.poetry]
name = "watts-next"
version = "0.1.0"
description = "End to end ML application to forecast electricity related data using numerical weather predictions."
authors = ["Badr Ben m'barek <badr.benb@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
power-stash = { path = "./power-stash", develop = true }
weather-weaver = { path = "./weather-weaver", develop = true }
rasterio = "^1.3.9"
cfgrib = "^0.9.10.4"
reverse-geocode = "^1.4.1"
ray = {extras = ["data", "default"], version = "^2.9.1"}
scikit-learn = "^1.4.0"
holidays = "^0.41"
snorkel = "^0.9.9"
xgboost = "^2.0.3"
sktime = "^0.26.0"
statsmodels = "^0.14.1"
prophet = "^1.1.5"

[tool.poetry.group.viz.dependencies]
folium = "^0.15.1"
matplotlib = "^3.8.2"
mapclassify = "^2.6.1"
plotly = "^5.18.0"


[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# Ruff configuration
# * See https://beta.ruff.rs/docs/
[tool.ruff]
select = [
    "F",   # pyflakes
    "E",   # pycodestyle
    "W",   # whitespace and newlines
    "I",   # isort
    "UP",  # modernize
    "ANN", # flake8 type annotations
    "S",   # flake8 bandit
    "B",   # flake8 bugbear
    "C4",  # flake8 comprehensions
    "COM", # flake8 commas
    "T20", # flake8 print
    "SIM", # flake8 simplify
    "ARG", # flake8 unused arguments
    "DTZ", # flake8 datetimes
    "Q",   # flake8 quotes
    "TCH", # flake8 typecheck
    "D",   # pydocstyle
    "RUF", # ruff-specific rules
]
line-length = 100
indent-width = 4
# Use pydocstyle Google convention
# See https://www.pydocstyle.org/en/stable/error_codes.html
ignore = [
    "D203", "D213", "D215", "D400", "D401", "D404", "D406",
    "D407", "D408", "D409", "D413", "D100", "D101", "D107",
    "ANN101", "S101"
]
exclude = ["__init__.py"]
fixable = ["ALL"]
extend-include = ["*.ipynb"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.ruff.per-file-ignores]
"test*" = ["D", "ANN"]
